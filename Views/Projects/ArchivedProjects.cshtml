@model IEnumerable<BugTracker.Models.Project>

@using BugTracker.Services.Interfaces

@inject IBTProjectService _projectService

@{
    ViewData["Title"] = "ArchivedProjects";
}

<h1>Archived Projects</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Archived)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Company)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectPriority)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            if (item.Archived == true)
            {
                <tr>
                    <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Archived)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Company!.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectPriority!.Id)
                </td>
                    @if ((await _projectService.GetProjectManagerAsync(item.Id)!) != null)
                    {
                        <td>@((await _projectService.GetProjectManagerAsync(item.Id)!).FullName)</td>
                    }
                    else
                    {
                        <td>No Project Manager Assigned</td>
                    }
                    <td>
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="AssignProjectManager" asp-route-id="@item.Id">AssignProjectManager</a> |
                        <a asp-action="AssignMembers" asp-route-id="@item.Id">Add User To Project</a>|
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
